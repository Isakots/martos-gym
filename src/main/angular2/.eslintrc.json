{
  "root": true,
  "ignorePatterns": [
    "*.spec.ts",
    "environment.*",
    "main.ts",
    "mock-server/**",
    "polyfills.ts",
    "projects/**/*",
    "test.ts"
  ],
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "parserOptions": {
        "project": [
          "tsconfig.json",
          "e2e/tsconfig.json"
        ],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/ng-cli-compat",
        "plugin:@angular-eslint/ng-cli-compat--formatting-add-on",
        "plugin:@angular-eslint/template/process-inline-templates"
      ],
      "plugins": [
        "eslint-plugin-unicorn",
        "eslint-plugin-no-null"
      ],
      "rules": {
        "@angular-eslint/component-class-suffix": "error",
        "@angular-eslint/directive-class-suffix": "error",
        "@angular-eslint/component-max-inline-declarations": "error",
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": [
              "app",
              "cz",
              "ngx",
              "test"
            ],
            "style": "kebab-case"
          }
        ],
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": [
              "app",
              "cz",
              "ngx",
              "test"
            ],
            "style": "camelCase"
          }
        ],
        "@angular-eslint/no-attribute-decorator": "error",
        "@angular-eslint/no-forward-ref": "error",
        "@angular-eslint/no-lifecycle-call": "error",
        "@angular-eslint/no-pipe-impure": "error",
        "@angular-eslint/no-queries-metadata-property": "error",
        "@angular-eslint/prefer-output-readonly": "error",
        "@angular-eslint/use-component-view-encapsulation": "error",
        "@angular-eslint/use-lifecycle-interface": "error",
        "@angular-eslint/use-pipe-decorator": "error",
        "@typescript-eslint/array-type": [
          "error",
          {
            "default": "generic"
          }
        ],
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-ts-comment": "error",
        "@typescript-eslint/consistent-type-assertions": [
          "error",
          {
            "assertionStyle": "as",
            "objectLiteralTypeAssertions": "never"
          }
        ],
        "@typescript-eslint/consistent-type-definitions": [
          "error",
          "interface"
        ],
        "@typescript-eslint/default-param-last": "error",
        "@typescript-eslint/explicit-function-return-type": "error",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "no-public",
            "overrides": {
              "parameterProperties": "explicit"
            }
          }
        ],
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "default",
            "format": [
              "camelCase",
              "UPPER_CASE",
              "PascalCase"
            ],
            "leadingUnderscore": "forbid",
            "trailingUnderscore": "forbid"
          },
          {
            "selector": "variableLike",
            "format": [
              "camelCase"
            ]
          },
          {
            "selector": [
              "variable",
              "property"
            ],
            "types": [
              "boolean"
            ],
            "format": [
              "PascalCase"
            ],
            "prefix": [
              "is",
              "are",
              "has",
              "have",
              "should",
              "can",
              "did",
              "will"
            ]
          },
          {
            "selector": [
              "property"
            ],
            "types": [
              "boolean"
            ],
            "format": [
              "UPPER_CASE"
            ],
            "modifiers": [
              "static"
            ],
            "prefix": [
              "IS_",
              "ARE_",
              "HAS_",
              "HAVE_",
              "SHOULD_",
              "CAN_",
              "DID_",
              "WILL_"
            ]
          },
          {
            "selector": [
              "property"
            ],
            "types": [
              "boolean"
            ],
            "format": [
              "UPPER_CASE"
            ],
            "modifiers": [
              "readonly"
            ],
            "prefix": [
              "IS_",
              "ARE_",
              "HAS_",
              "HAVE_",
              "SHOULD_",
              "CAN_",
              "DID_",
              "WILL_"
            ]
          },
          {
            "selector": "memberLike",
            "format": [
              "camelCase"
            ]
          },
          {
            "selector": "property",
            "format": [
              "UPPER_CASE"
            ],
            "modifiers": [
              "static"
            ]
          },
          {
            "selector": "property",
            "format": [
              "UPPER_CASE"
            ],
            "modifiers": [
              "readonly"
            ]
          },
          {
            "selector": "enumMember",
            "format": [
              "UPPER_CASE"
            ]
          },
          {
            "selector": "typeLike",
            "format": [
              "PascalCase"
            ]
          }
        ],
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-floating-promises": "off",
        "@typescript-eslint/no-for-in-array": "error",
        "@typescript-eslint/no-implied-eval": "error",
        "@typescript-eslint/no-require-imports": "error",
        "@typescript-eslint/no-shadow": [
          "error",
          {
            "ignoreTypeValueShadow": true,
            "ignoreFunctionTypeParameterNameValueShadow": true
          }
        ],
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
        "@typescript-eslint/no-unnecessary-type-arguments": "error",
        "@typescript-eslint/no-unnecessary-type-assertion": "error",
        "@typescript-eslint/no-unused-expressions": [
          "error",
          {
            "allowShortCircuit": true
          }
        ],
        "@typescript-eslint/no-unused-vars-experimental": "error",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-enum-initializers": "error",
        "@typescript-eslint/prefer-nullish-coalescing": "error",
        "@typescript-eslint/prefer-readonly": "error",
        "@typescript-eslint/promise-function-async": "error",
        "@typescript-eslint/quotes": [
          "error",
          "single",
          {
            "allowTemplateLiterals": true
          }
        ],
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/restrict-plus-operands": "error",
        "@typescript-eslint/type-annotation-spacing": [
          "error",
          {
            "before": false,
            "after": true,
            "overrides": {
              "arrow": {
                "before": true,
                "after": true
              }
            }
          }
        ],
        "@typescript-eslint/unbound-method": "error",
        "@typescript-eslint/unified-signatures": "error",
        "arrow-body-style": [
          "error",
          "as-needed"
        ],
        "arrow-parens": [
          "error",
          "as-needed"
        ],
        "brace-style": [
          "error",
          "1tbs"
        ],
        "class-methods-use-this": "error",
        "comma-dangle": "error",
        "comma-spacing": "error",
        "complexity": [
          "error",
          {
            "max": 20
          }
        ],
        "default-case": "error",
        "default-param-last": "off",
        "eqeqeq": [
          "error",
          "always"
        ],
        "import/no-default-export": "error",
        "import/no-extraneous-dependencies": "error",
        "import/no-unassigned-import": "error",
        "import/order": [
          "error",
          {
            "alphabetize": {
              "order": "asc"
            }
          }
        ],
        "keyword-spacing": [
          "error",
          {
            "before": true,
            "after": true
          }
        ],
        "max-len": [
          "error",
          {
            "ignorePattern": "^(import|export|class|\\/\\/) ",
            "code": 140
          }
        ],
        "max-lines": [
          "error",
          400
        ],
        "multiline-comment-style": [
          "error",
          "bare-block"
        ],
        "newline-per-chained-call": [
          "error",
          {
            "ignoreChainWithDepth": 3
          }
        ],
        "no-array-constructor": "off",
        "no-console": [
          "error",
          {
            "allow": [
              "error"
            ]
          }
        ],
        "no-duplicate-case": "error",
        "no-duplicate-imports": "error",
        "no-empty": "error",
        "no-empty-function": "off",
        "no-extra-bind": "error",
        "no-extra-parens": "error",
        "no-extra-semi": "error",
        "no-implied-eval": "off",
        "no-multiple-empty-lines": [
          "error",
          {
            "max": 1
          }
        ],
        "no-new-func": "error",
        "no-null/no-null": "error",
        "no-plusplus": "off",
        "no-redeclare": "error",
        "no-restricted-syntax": [
          "error",
          "ForInStatement"
        ],
        "no-return-await": "error",
        "no-sequences": "error",
        "no-shadow": "off",
        "no-sparse-arrays": "error",
        "no-template-curly-in-string": "error",
        "no-unused-expressions": "off",
        "no-useless-constructor": "off",
        "no-void": "error",
        "padding-line-between-statements": [
          "off",
          {
            "blankLine": "always",
            "prev": "*",
            "next": "return"
          }
        ],
        "prefer-object-spread": "error",
        "prefer-template": "error",
        "quotes": "off",
        "require-await": "off",
        "space-infix-ops": [
          "error",
          {
            "int32Hint": false
          }
        ],
        "space-in-parens": [
          "error",
          "never"
        ],
        "unicorn/filename-case": "error",
        "use-isnan": "error",
        "yoda": [
          "error",
          "always"
        ]
      }
    },
    {
      "files": [
        "*.html"
      ],
      "extends": [
        "plugin:@angular-eslint/template/recommended"
      ],
      "rules": {
        "@angular-eslint/template/no-call-expression": "off"
      }
    }
  ]
}
